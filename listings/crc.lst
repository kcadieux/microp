


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           CrcAssVersion
    3 00000000         CrcAssVersion
    4 00000000         
    5 00000000        0 
                       string  RN               R0
    6 00000000        1 
                       stringLength
                               RN               R1
    7 00000000        4 
                       polynom RN               R4
    8 00000000        6 
                       bitCounter
                               RN               R6
    9 00000000        7 
                       character
                               RN               R7
   10 00000000        A 
                       characterIndex
                               RN               R10
   11 00000000        B 
                       remainder
                               RN               R11
   12 00000000         
   13 00000000 F248 4408       MOV              polynom, #0x8408 ;can't XOR wit
                                                            h more than 255 (co
                                                            nstant)
   14 00000004         CLOOP
   15 00000004 6807            LDR              character, [string] ;ask for on
                                                            e instruction (acce
                                                            ss pointed data)
   16 00000006 F007 07FF       AND              character, #0xFF
   17 0000000A EA8B 0B07       EOR              remainder, character
   18 0000000E F04F 0600       MOV              bitCounter, #0 ;
   19 00000012         
   20 00000012         BLOOP
   21 00000012 F00B 0901       AND              R9, remainder, #0x0001
   22 00000016 F1B9 0F01       CMP              R9, #1
   23 0000001A D003            BEQ              SHIFTANDXOR
   24 0000001C         
   25 0000001C D1FF            BNE              SHIFT
   26 0000001E         
   27 0000001E         SHIFT
   28 0000001E EA4F 0B5B       LSR              remainder, #1
   29 00000022 E004            B                OUTOFIF
   30 00000024         
   31 00000024         SHIFTANDXOR
   32 00000024 EA4F 0B5B       LSR              remainder, #1
   33 00000028 EA8B 0B04       EOR              remainder, polynom
   34 0000002C E7FF            B                OUTOFIF
   35 0000002E         
   36 0000002E         OUTOFIF
   37 0000002E F106 0601       ADD              bitCounter, #1
   38 00000032 2E08            CMP              bitCounter, #8
   39 00000034 D000            BEQ              BLOOPDONE
   40 00000036 DBEC            BLT              BLOOP
   41 00000038         
   42 00000038         BLOOPDONE
   43 00000038 F10A 0A01       ADD              characterIndex, #1



ARM Macro Assembler    Page 2 


   44 0000003C F100 0001       ADD              string, #1
   45 00000040 458A            CMP              characterIndex, stringLength
   46 00000042 D000            BEQ              CLOOPDONE
   47 00000044 DBDE            BLT              CLOOP
   48 00000046         CLOOPDONE
   49 00000046 4658            MOV              R0, remainder ; Bring the remai
                                                            nder into R0 (outpu
                                                            t register)
   50 00000048 4770            BX               LR          ;
   51 0000004A                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
ect\crc.d -o.\object\crc.o -I"C:\Users\Vincent\Dropbox\ECSE 426 -- Micro Proces
sor Systems\19 septembre\Lab 1 Base Project\Lab 1 Base Project\RTE" -I"C:\Users
\Vincent\Dropbox\ECSE 426 -- Micro Processor Systems\19 septembre\Lab 1 Base Pr
oject\Lab 1 Base Project\RTE\Device\STM32F407VG" -IC:\Keil_v5\ARM\PACK\ARM\CMSI
S\4.1.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Inc
lude --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list=.\listi
ngs\crc.lst crc.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BLOOP 00000012

Symbol: BLOOP
   Definitions
      At line 20 in file crc.s
   Uses
      At line 40 in file crc.s
Comment: BLOOP used once
BLOOPDONE 00000038

Symbol: BLOOPDONE
   Definitions
      At line 42 in file crc.s
   Uses
      At line 39 in file crc.s
Comment: BLOOPDONE used once
CLOOP 00000004

Symbol: CLOOP
   Definitions
      At line 14 in file crc.s
   Uses
      At line 47 in file crc.s
Comment: CLOOP used once
CLOOPDONE 00000046

Symbol: CLOOPDONE
   Definitions
      At line 48 in file crc.s
   Uses
      At line 46 in file crc.s
Comment: CLOOPDONE used once
CrcAssVersion 00000000

Symbol: CrcAssVersion
   Definitions
      At line 3 in file crc.s
   Uses
      At line 2 in file crc.s
Comment: CrcAssVersion used once
OUTOFIF 0000002E

Symbol: OUTOFIF
   Definitions
      At line 36 in file crc.s
   Uses
      At line 29 in file crc.s
      At line 34 in file crc.s

SHIFT 0000001E

Symbol: SHIFT
   Definitions
      At line 27 in file crc.s
   Uses
      At line 25 in file crc.s
Comment: SHIFT used once
SHIFTANDXOR 00000024




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: SHIFTANDXOR
   Definitions
      At line 31 in file crc.s
   Uses
      At line 23 in file crc.s
Comment: SHIFTANDXOR used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file crc.s
   Uses
      None
Comment: text unused
9 symbols
349 symbols in table
